<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd"
       xmlns:context="http://www.springframework.org/schema/context"
        >

    <import resource="spring-security.xml"/>

	<context:annotation-config/>
    <context:component-scan base-package="com.rectus29.beertender"/>

    <!-- Activates @Scheduled and @Async annotations for scheduling -->
    <task:annotation-driven executor="BeerTenderExecutor" scheduler="BeerTenderScheduler"/>
    <task:executor id="BeerTenderExecutor" pool-size="5-25" queue-capacity="100"/>
	<task:scheduler id="BeerTenderScheduler" pool-size="10" />


    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

    <bean id="contextApplicationContextProvider" class="com.rectus29.beertender.spring.ApplicationContextProvider" />
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect"/>
                <property name="generateDdl" value="true"/>
            </bean>
        </property>
        <property name="loadTimeWeaver">
            <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
        </property>
    </bean>
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://127.0.0.1/beer_tender"/>
        <property name="user" value="root"/>
        <property name="password" value=""/>
        <property name="autoCommitOnClose">
            <value>true</value>
        </property>
        <property name="idleConnectionTestPeriod">
            <value>15</value>
        </property>
        <property name="maxIdleTime">
            <value>15</value>
        </property>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
        <property name="packagesToScan">
            <list>
                <value>com.rectus29.beertender.entities</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.c3p0.min_size">5</prop>
                <prop key="hibernate.c3p0.max_size">20</prop>
                <prop key="hibernate.c3p0.timeout">300</prop>
                <prop key="hibernate.c3p0.max_statements">50</prop>
                <prop key="connection.provider_class">org.hibernate.c3p0.internal.C3P0ConnectionProvider</prop>
				<prop key="hibernate.search.default.directory_provider">filesystem</prop>
				<prop key="hibernate.search.default.indexBase">/lucene/indexes</prop>
				<prop key="hibernate.search.default.optimizer.operation_limit.max">500</prop>
            </props>
        </property>
    </bean>
    <!-- setup transaction manager	-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- tells Spring to put transactional advice on any class or method that has an @Transactional annotation on it  -->
    <tx:annotation-driven/>

    <!-- Mail configuration -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="127.0.0.1"/>
        <!--<property name="username" value="sender@server.com"/>-->
        <!--<property name="password" value="pass4sender"/>-->
        <property name="port" value="25"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

	<bean id="freeMarkerConfigurationFactory" class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
		<property name="templateLoaderPath" value="classpath:/mailTemplate"/>
		<property name="preferFileSystemAccess" value="false"/>
	</bean>
</beans>
