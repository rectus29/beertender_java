# java.util.Date implementation
scalar Date
scalar BigDecimal

type Query {
	allCateg: [Category]
	getCateg(id: ID!): Category

	allProduct(state: State): [Product]
	getProduct(id: ID!): Product

	allUser(state: State): [User]
	getUser(id: ID!): User
}

type Mutation {
    #saveProduct(product: inputProduct): OperationResult
    #saveCategory(category: inputCategory): OperationResult
   # saveUser(user: inputUser): OperationResult
}


type OperationResult{
    object : String
    cause : String
}

enum State {
	DISABLE,
	ENABLE,
	PENDING,
	DELETED,
	ERROR
}

type Category {
	id: ID!,
	created: Date!,
	updated: Date!,
	name:  String,
	shortName: String,
	description: String,
	#	productList: [Product],
	state: State
}

type Product {
	id: ID!,
	created: Date!,
	updated: Date!,
	productDefinition: ProductDefinition,
	price: BigDecimal!,
	packaging: String,
	fileImage: String,
	categoryList: [Category],
	state: State
}

type ProductDefinition {
	name: String,
	description: String
}

type User {
	id: ID!,
	created: Date!,
	updated: Date!,
	uuid: String!,
	firstName: String,
	lastName: String,
	role: String!,
	email: String!,
	state:State
}

#input inputProduct{


#}
#input inputCategory{


#}
#input inputUser{


#}
#
#type SigninPayload {
#	token: String
#	user: User
#}
#
#input AuthData {
#	email: String!
#	password: String!
#}
#
#input LinkFilter {
#	description_contains: String
#	url_contains: String
#}
#
